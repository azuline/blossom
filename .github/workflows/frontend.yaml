name: frontend
on: 
  push:
    paths:
      - .github/workflows/frontend.yaml
      - flake.*
      - nix/**
      - frontend/**
defaults:
  run:
    working-directory: frontend/
jobs:
  check:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: blossom
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build Nix
        run: nix build -j8 ../\#devShells.x86_64-linux.frontend
      - name: Install Dependencies
        run: nix develop ../\#devShells.x86_64-linux.frontend --command pnpm install
      - name: Typecheck
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make typecheck
      - name: Test
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make test
      - name: Lintcheck
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make lintcheck
  visual:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: blossom
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build Nix
        run: nix build -j8 ../\#devShells.x86_64-linux.frontend
      - name: Install Dependencies
        run: nix develop ../\#devShells.x86_64-linux.frontend --command pnpm install
      - name: Visual Tests
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make test-visual
  build-ladle:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: blossom
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build Nix
        run: nix build -j8 ../\#devShells.x86_64-linux.frontend
      - name: Install Dependencies
        run: nix develop ../\#devShells.x86_64-linux.frontend --command pnpm install
      - name: Build Ladle
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make build-stories
      - name: Create Tarball
        run: nix develop ../\#devShells.x86_64-linux.frontend --command bash -c '(cd ./build && tar -czvf ../ladle.tar.gz *)'
      - name: Release
        id: release
        uses: softprops/action-gh-release@v1
        with:
          body: Auto-release with built Ladle
          files: ladle.tar.gz
          name: ${{ github.sha }}
      - name: Store Ladle artifact download URL
        run: |
          url=$(echo "${{ steps.release.outputs.assets }}" | jq '.[0].browser_download_url')
          echo "${ladle_artifact_url}=${url}"
          echo "${ladle_artifact_url}=${url}" >> $GITHUB_OUTPUT
  # deploy-ladle:
  #   runs-on: ubuntu-latest
  #   env:
  #     ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  #   steps:
  #     - uses: actions/checkout@v3
  #     - uses: cachix/install-nix-action@v20
  #     - uses: cachix/cachix-action@v12
  #       with:
  #         name: blossom
  #         authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
  #     - name: Tailscale
  #       uses: tailscale/github-action@v1
  #       with:
  #         authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
  #     - name: Build Nix
  #       run: nix build -j8 ../\#devShells.x86_64-linux.deployments
  #     - name: Nomad test
  #       run: nix develop ../\#devShells.x86_64-linux.deployments --command nomad status
