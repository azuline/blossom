name: frontend
on: 
  push:
    paths:
      - .github/workflows/frontend.yaml
      - flake.*
      - nix/**
      - frontend/**
defaults:
  run:
    working-directory: frontend/
jobs:
  check:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: blossom
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build Nix
        run: nix build -j8 ../\#devShells.x86_64-linux.frontend
      - name: Install Dependencies
        run: nix develop ../\#devShells.x86_64-linux.frontend --command pnpm install
      - name: Typecheck
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make typecheck
      - name: Test
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make test
      - name: Lintcheck
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make lintcheck
  visual:
    runs-on: ubuntu-latest
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: blossom
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build Nix
        run: nix build -j8 ../\#devShells.x86_64-linux.frontend
      - name: Install Dependencies
        run: nix develop ../\#devShells.x86_64-linux.frontend --command pnpm install
      - name: Visual Tests
        if: success() || failure()
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make test-visual
  build-ladle:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      artifact_source_url: ${{ steps.upload.outputs.ladle_artifact_url }}
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: blossom
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Build Nix
        run: nix build -j8 ../\#devShells.x86_64-linux.frontend
      - name: Install Dependencies
        run: nix develop ../\#devShells.x86_64-linux.frontend --command pnpm install
      - name: Build Ladle
        run: nix develop ../\#devShells.x86_64-linux.frontend --command make build-stories
      - name: Create Tarball
        run: nix develop ../\#devShells.x86_64-linux.frontend --command bash -c '(cd ./build && tar -czvf ../ladle.tar.gz *)'
      - name: Create release and upload tarball
        id: upload
        run: |
          commit_sha="$(git rev-parse --short HEAD)"
          timestamp="$(date +%Y-%m-%d_%k-%M-%S)"
          release_name="ladle-${commit_sha}-${timestamp}"
          token=${{ secrets.GITHUB_TOKEN }}

          # https://docs.github.com/en/rest/releases/releases#create-a-release
          # https://stackoverflow.com/questions/45240336/how-to-use-github-release-api-to-make-a-release-without-source-code
          upload_url="$(curl -s -H "Authorization: token $token" \
            -d "{\"tag_name\": \"$release_name\", \"name\":\"$release_name\",\"target_comitish\": \"$commit_sha\"}" \
            "https://api.github.com/repos/azuline/blossom/releases" | jq -r '.upload_url')"
          upload_url="${upload_url%\{*}"
          echo "Created release $release_name"

          artifact_url="$(curl -s -H "Authorization: token $token" \
            -H "Content-Type: application/gzip" \
            --data-binary @ladle.tar.gz \
            "$upload_url?name=ladle.tar.gz&label=ladle.tar.gz"| jq -r '.browser_download_url')"
          echo "Uploaded ladle.tar.gz to release"

          echo "ladle_artifact_url=${artifact_url}"
          echo "ladle_artifact_url=${artifact_url}" >> $GITHUB_OUTPUT
  deploy-ladle:
    runs-on: ubuntu-latest
    needs: build-ladle
    run:
      working-directory: nomad/
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - uses: actions/checkout@v3
      - uses: cachix/install-nix-action@v20
      - uses: cachix/cachix-action@v12
        with:
          name: blossom
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: Tailscale
        uses: tailscale/github-action@v1
        with:
          authkey: ${{ secrets.TAILSCALE_AUTHKEY }}
      - name: Build Nix
        run: nix build -j8 ../\#devShells.x86_64-linux.deployments
      - name: Nomad test
        run: nix develop ../\#devShells.x86_64-linux.deployments --command nomad status
      - name: Tailscale test
        run: tailscale status
      - name: Deploy
        env:
          ARTIFACT_SOURCE_URL: ${{ needs.build-ladle.outputs.artifact_source_url }}
        run: |
          nix develop ../\#devShells.x86_64-linux.deployments
          echo "{}" | jq ".artifact_source_url = $ARTIFACT_SOURCE_URL" > vars.json
          levant deploy -log-level=debug -address=http://100.71.28.44:4646 -var-file vars.json ladle.nomad
