# Code generated by sqlc. DO NOT EDIT.
import dataclasses
import datetime
from typing import Any

@dataclasses.dataclass(slots=True)
class UserSignupStepEnum:
    value: str

@dataclasses.dataclass(slots=True)
class Users:
    id: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
    storytime: Any | None
    name: str
    email: str
    password_hash: str | None
    signup_step: str
    is_enabled: bool
    last_visited_at: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class Invites:
    id: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
    storytime: Any | None
    user_id: str
    code_hash: str
    expires_at: datetime.datetime
    accepted_at: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class OrganizationsInboundSourceEnum:
    value: str

@dataclasses.dataclass(slots=True)
class Organizations:
    id: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
    storytime: Any | None
    name: str
    inbound_source: str

@dataclasses.dataclass(slots=True)
class OrganizationsUsers:
    id: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
    storytime: Any | None
    user_id: str
    organization_id: str
    removed_at: datetime.datetime | None
    removed_by_user: str | None

@dataclasses.dataclass(slots=True)
class Sessions:
    id: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
    storytime: Any | None
    user_id: str
    organization_id: str | None
    last_seen_at: datetime.datetime
    expired_at: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class VaultedSecrets:
    id: str
    created_at: datetime.datetime
    updated_at: datetime.datetime
    storytime: Any | None
    organization_id: str
    ciphertext: str

@dataclasses.dataclass(slots=True)
class PgAggregate:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    aggfnoid: Any
    aggkind: str
    aggnumdirectargs: int
    aggtransfn: Any
    aggfinalfn: Any
    aggcombinefn: Any
    aggserialfn: Any
    aggdeserialfn: Any
    aggmtransfn: Any
    aggminvtransfn: Any
    aggmfinalfn: Any
    aggfinalextra: bool
    aggmfinalextra: bool
    aggfinalmodify: str
    aggmfinalmodify: str
    aggsortop: Any
    aggtranstype: Any
    aggtransspace: int
    aggmtranstype: Any
    aggmtransspace: int
    agginitval: str | None
    aggminitval: str | None

@dataclasses.dataclass(slots=True)
class PgAm:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    amname: Any
    amhandler: Any
    amtype: str

@dataclasses.dataclass(slots=True)
class PgAmop:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    amopfamily: Any
    amoplefttype: Any
    amoprighttype: Any
    amopstrategy: int
    amoppurpose: str
    amopopr: Any
    amopmethod: Any
    amopsortfamily: Any

@dataclasses.dataclass(slots=True)
class PgAmproc:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    amprocfamily: Any
    amproclefttype: Any
    amprocrighttype: Any
    amprocnum: int
    amproc: Any

@dataclasses.dataclass(slots=True)
class PgAttrdef:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    adrelid: Any
    adnum: int
    adbin: Any

@dataclasses.dataclass(slots=True)
class PgAttribute:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    attrelid: Any
    attname: Any
    atttypid: Any
    attstattarget: int
    attlen: int
    attnum: int
    attndims: int
    attcacheoff: int
    atttypmod: int
    attbyval: bool
    attalign: str
    attstorage: str
    attcompression: str
    attnotnull: bool
    atthasdef: bool
    atthasmissing: bool
    attidentity: str
    attgenerated: str
    attisdropped: bool
    attislocal: bool
    attinhcount: int
    attcollation: Any
    attacl: list[Any] | None
    attoptions: list[Any] | None
    attfdwoptions: list[Any] | None
    attmissingval: Any | None

@dataclasses.dataclass(slots=True)
class PgAuthMembers:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    roleid: Any
    member: Any
    grantor: Any
    admin_option: bool

@dataclasses.dataclass(slots=True)
class PgAuthid:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    rolname: Any
    rolsuper: bool
    rolinherit: bool
    rolcreaterole: bool
    rolcreatedb: bool
    rolcanlogin: bool
    rolreplication: bool
    rolbypassrls: bool
    rolconnlimit: int
    rolpassword: str | None
    rolvaliduntil: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgAvailableExtensionVersions:
    name: Any | None
    version: str | None
    installed: bool | None
    superuser: bool | None
    trusted: bool | None
    relocatable: bool | None
    schema: Any | None
    requires: list[Any] | None
    comment: str | None

@dataclasses.dataclass(slots=True)
class PgAvailableExtensions:
    name: Any | None
    default_version: str | None
    installed_version: str | None
    comment: str | None

@dataclasses.dataclass(slots=True)
class PgBackendMemoryContexts:
    name: str | None
    ident: str | None
    parent: str | None
    level: int | None
    total_bytes: int | None
    total_nblocks: int | None
    free_bytes: int | None
    free_chunks: int | None
    used_bytes: int | None

@dataclasses.dataclass(slots=True)
class PgCast:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    castsource: Any
    casttarget: Any
    castfunc: Any
    castcontext: str
    castmethod: str

@dataclasses.dataclass(slots=True)
class PgClass:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    relname: Any
    relnamespace: Any
    reltype: Any
    reloftype: Any
    relowner: Any
    relam: Any
    relfilenode: Any
    reltablespace: Any
    relpages: int
    reltuples: float
    relallvisible: int
    reltoastrelid: Any
    relhasindex: bool
    relisshared: bool
    relpersistence: str
    relkind: str
    relnatts: int
    relchecks: int
    relhasrules: bool
    relhastriggers: bool
    relhassubclass: bool
    relrowsecurity: bool
    relforcerowsecurity: bool
    relispopulated: bool
    relreplident: str
    relispartition: bool
    relrewrite: Any
    relfrozenxid: Any
    relminmxid: Any
    relacl: list[Any] | None
    reloptions: list[Any] | None
    relpartbound: Any | None

@dataclasses.dataclass(slots=True)
class PgCollation:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    collname: Any
    collnamespace: Any
    collowner: Any
    collprovider: str
    collisdeterministic: bool
    collencoding: int
    collcollate: str | None
    collctype: str | None
    colliculocale: str | None
    collversion: str | None

@dataclasses.dataclass(slots=True)
class PgConfig:
    name: str | None
    setting: str | None

@dataclasses.dataclass(slots=True)
class PgConstraint:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    conname: Any
    connamespace: Any
    contype: str
    condeferrable: bool
    condeferred: bool
    convalidated: bool
    conrelid: Any
    contypid: Any
    conindid: Any
    conparentid: Any
    confrelid: Any
    confupdtype: str
    confdeltype: str
    confmatchtype: str
    conislocal: bool
    coninhcount: int
    connoinherit: bool
    conkey: list[Any] | None
    confkey: list[Any] | None
    conpfeqop: list[Any] | None
    conppeqop: list[Any] | None
    conffeqop: list[Any] | None
    confdelsetcols: list[Any] | None
    conexclop: list[Any] | None
    conbin: Any | None

@dataclasses.dataclass(slots=True)
class PgConversion:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    conname: Any
    connamespace: Any
    conowner: Any
    conforencoding: int
    contoencoding: int
    conproc: Any
    condefault: bool

@dataclasses.dataclass(slots=True)
class PgCursors:
    name: str | None
    statement: str | None
    is_holdable: bool | None
    is_binary: bool | None
    is_scrollable: bool | None
    creation_time: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgDatabase:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    datname: Any
    datdba: Any
    encoding: int
    datlocprovider: str
    datistemplate: bool
    datallowconn: bool
    datconnlimit: int
    datfrozenxid: Any
    datminmxid: Any
    dattablespace: Any
    datcollate: str
    datctype: str
    daticulocale: str | None
    datcollversion: str | None
    datacl: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgDbRoleSetting:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    setdatabase: Any
    setrole: Any
    setconfig: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgDefaultAcl:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    defaclrole: Any
    defaclnamespace: Any
    defaclobjtype: str
    defaclacl: list[Any]

@dataclasses.dataclass(slots=True)
class PgDepend:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    classid: Any
    objid: Any
    objsubid: int
    refclassid: Any
    refobjid: Any
    refobjsubid: int
    deptype: str

@dataclasses.dataclass(slots=True)
class PgDescription:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    objoid: Any
    classoid: Any
    objsubid: int
    description: str

@dataclasses.dataclass(slots=True)
class PgEnum:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    enumtypid: Any
    enumsortorder: float
    enumlabel: Any

@dataclasses.dataclass(slots=True)
class PgEventTrigger:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    evtname: Any
    evtevent: Any
    evtowner: Any
    evtfoid: Any
    evtenabled: str
    evttags: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgExtension:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    extname: Any
    extowner: Any
    extnamespace: Any
    extrelocatable: bool
    extversion: str
    extconfig: list[Any] | None
    extcondition: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgFileSettings:
    sourcefile: str | None
    sourceline: int | None
    seqno: int | None
    name: str | None
    setting: str | None
    applied: bool | None
    error: str | None

@dataclasses.dataclass(slots=True)
class PgForeignDataWrapper:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    fdwname: Any
    fdwowner: Any
    fdwhandler: Any
    fdwvalidator: Any
    fdwacl: list[Any] | None
    fdwoptions: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgForeignServer:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    srvname: Any
    srvowner: Any
    srvfdw: Any
    srvtype: str | None
    srvversion: str | None
    srvacl: list[Any] | None
    srvoptions: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgForeignTable:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    ftrelid: Any
    ftserver: Any
    ftoptions: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgGroup:
    groname: Any | None
    grosysid: Any | None
    grolist: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgHbaFileRules:
    line_number: int | None
    type: str | None
    database: list[Any] | None
    user_name: list[Any] | None
    address: str | None
    netmask: str | None
    auth_method: str | None
    options: list[Any] | None
    error: str | None

@dataclasses.dataclass(slots=True)
class PgIdentFileMappings:
    line_number: int | None
    map_name: str | None
    sys_name: str | None
    pg_username: str | None
    error: str | None

@dataclasses.dataclass(slots=True)
class PgIndex:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    indexrelid: Any
    indrelid: Any
    indnatts: int
    indnkeyatts: int
    indisunique: bool
    indnullsnotdistinct: bool
    indisprimary: bool
    indisexclusion: bool
    indimmediate: bool
    indisclustered: bool
    indisvalid: bool
    indcheckxmin: bool
    indisready: bool
    indislive: bool
    indisreplident: bool
    indkey: list[Any]
    indcollation: list[Any]
    indclass: list[Any]
    indoption: list[Any]
    indexprs: Any | None
    indpred: Any | None

@dataclasses.dataclass(slots=True)
class PgIndexes:
    schemaname: Any | None
    tablename: Any | None
    indexname: Any | None
    tablespace: Any | None
    indexdef: str | None

@dataclasses.dataclass(slots=True)
class PgInherits:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    inhrelid: Any
    inhparent: Any
    inhseqno: int
    inhdetachpending: bool

@dataclasses.dataclass(slots=True)
class PgInitPrivs:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    objoid: Any
    classoid: Any
    objsubid: int
    privtype: str
    initprivs: list[Any]

@dataclasses.dataclass(slots=True)
class PgLanguage:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    lanname: Any
    lanowner: Any
    lanispl: bool
    lanpltrusted: bool
    lanplcallfoid: Any
    laninline: Any
    lanvalidator: Any
    lanacl: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgLargeobject:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    loid: Any
    pageno: int
    data: bytes

@dataclasses.dataclass(slots=True)
class PgLargeobjectMetadata:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    lomowner: Any
    lomacl: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgLocks:
    locktype: str | None
    database: Any | None
    relation: Any | None
    page: int | None
    tuple: int | None
    virtualxid: str | None
    transactionid: Any | None
    classid: Any | None
    objid: Any | None
    objsubid: int | None
    virtualtransaction: str | None
    pid: int | None
    mode: str | None
    granted: bool | None
    fastpath: bool | None
    waitstart: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgMatviews:
    schemaname: Any | None
    matviewname: Any | None
    matviewowner: Any | None
    tablespace: Any | None
    hasindexes: bool | None
    ispopulated: bool | None
    definition: str | None

@dataclasses.dataclass(slots=True)
class PgNamespace:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    nspname: Any
    nspowner: Any
    nspacl: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgOpclass:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    opcmethod: Any
    opcname: Any
    opcnamespace: Any
    opcowner: Any
    opcfamily: Any
    opcintype: Any
    opcdefault: bool
    opckeytype: Any

@dataclasses.dataclass(slots=True)
class PgOperator:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    oprname: Any
    oprnamespace: Any
    oprowner: Any
    oprkind: str
    oprcanmerge: bool
    oprcanhash: bool
    oprleft: Any
    oprright: Any
    oprresult: Any
    oprcom: Any
    oprnegate: Any
    oprcode: Any
    oprrest: Any
    oprjoin: Any

@dataclasses.dataclass(slots=True)
class PgOpfamily:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    opfmethod: Any
    opfname: Any
    opfnamespace: Any
    opfowner: Any

@dataclasses.dataclass(slots=True)
class PgParameterAcl:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    parname: str
    paracl: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgPartitionedTable:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    partrelid: Any
    partstrat: str
    partnatts: int
    partdefid: Any
    partattrs: list[Any]
    partclass: list[Any]
    partcollation: list[Any]
    partexprs: Any | None

@dataclasses.dataclass(slots=True)
class PgPolicies:
    schemaname: Any | None
    tablename: Any | None
    policyname: Any | None
    permissive: str | None
    roles: list[Any] | None
    cmd: str | None
    qual: str | None
    with_check: str | None

@dataclasses.dataclass(slots=True)
class PgPolicy:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    polname: Any
    polrelid: Any
    polcmd: str
    polpermissive: bool
    polroles: list[Any]
    polqual: Any | None
    polwithcheck: Any | None

@dataclasses.dataclass(slots=True)
class PgPreparedStatements:
    name: str | None
    statement: str | None
    prepare_time: datetime.datetime | None
    parameter_types: list[Any] | None
    from_sql: bool | None
    generic_plans: int | None
    custom_plans: int | None

@dataclasses.dataclass(slots=True)
class PgPreparedXacts:
    transaction: Any | None
    gid: str | None
    prepared: datetime.datetime | None
    owner: Any | None
    database: Any | None

@dataclasses.dataclass(slots=True)
class PgProc:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    proname: Any
    pronamespace: Any
    proowner: Any
    prolang: Any
    procost: float
    prorows: float
    provariadic: Any
    prosupport: Any
    prokind: str
    prosecdef: bool
    proleakproof: bool
    proisstrict: bool
    proretset: bool
    provolatile: str
    proparallel: str
    pronargs: int
    pronargdefaults: int
    prorettype: Any
    proargtypes: list[Any]
    proallargtypes: list[Any] | None
    proargmodes: list[Any] | None
    proargnames: list[Any] | None
    proargdefaults: Any | None
    protrftypes: list[Any] | None
    prosrc: str
    probin: str | None
    prosqlbody: Any | None
    proconfig: list[Any] | None
    proacl: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgPublication:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    pubname: Any
    pubowner: Any
    puballtables: bool
    pubinsert: bool
    pubupdate: bool
    pubdelete: bool
    pubtruncate: bool
    pubviaroot: bool

@dataclasses.dataclass(slots=True)
class PgPublicationNamespace:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    pnpubid: Any
    pnnspid: Any

@dataclasses.dataclass(slots=True)
class PgPublicationRel:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    prpubid: Any
    prrelid: Any
    prqual: Any | None
    prattrs: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgPublicationTables:
    pubname: Any | None
    schemaname: Any | None
    tablename: Any | None
    attnames: list[Any] | None
    rowfilter: str | None

@dataclasses.dataclass(slots=True)
class PgRange:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    rngtypid: Any
    rngsubtype: Any
    rngmultitypid: Any
    rngcollation: Any
    rngsubopc: Any
    rngcanonical: Any
    rngsubdiff: Any

@dataclasses.dataclass(slots=True)
class PgReplicationOrigin:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    roident: Any
    roname: str

@dataclasses.dataclass(slots=True)
class PgReplicationOriginStatus:
    local_id: Any | None
    external_id: str | None
    remote_lsn: Any | None
    local_lsn: Any | None

@dataclasses.dataclass(slots=True)
class PgReplicationSlots:
    slot_name: Any | None
    plugin: Any | None
    slot_type: str | None
    datoid: Any | None
    database: Any | None
    temporary: bool | None
    active: bool | None
    active_pid: int | None
    xmin: Any | None
    catalog_xmin: Any | None
    restart_lsn: Any | None
    confirmed_flush_lsn: Any | None
    wal_status: str | None
    safe_wal_size: int | None
    two_phase: bool | None

@dataclasses.dataclass(slots=True)
class PgRewrite:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    rulename: Any
    ev_class: Any
    ev_type: str
    ev_enabled: str
    is_instead: bool
    ev_qual: Any
    ev_action: Any

@dataclasses.dataclass(slots=True)
class PgRoles:
    rolname: Any | None
    rolsuper: bool | None
    rolinherit: bool | None
    rolcreaterole: bool | None
    rolcreatedb: bool | None
    rolcanlogin: bool | None
    rolreplication: bool | None
    rolconnlimit: int | None
    rolpassword: str | None
    rolvaliduntil: datetime.datetime | None
    rolbypassrls: bool | None
    rolconfig: list[Any] | None
    oid: Any | None

@dataclasses.dataclass(slots=True)
class PgRules:
    schemaname: Any | None
    tablename: Any | None
    rulename: Any | None
    definition: str | None

@dataclasses.dataclass(slots=True)
class PgSeclabel:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    objoid: Any
    classoid: Any
    objsubid: int
    provider: str
    label: str

@dataclasses.dataclass(slots=True)
class PgSeclabels:
    objoid: Any | None
    classoid: Any | None
    objsubid: int | None
    objtype: str | None
    objnamespace: Any | None
    objname: str | None
    provider: str | None
    label: str | None

@dataclasses.dataclass(slots=True)
class PgSequence:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    seqrelid: Any
    seqtypid: Any
    seqstart: int
    seqincrement: int
    seqmax: int
    seqmin: int
    seqcache: int
    seqcycle: bool

@dataclasses.dataclass(slots=True)
class PgSequences:
    schemaname: Any | None
    sequencename: Any | None
    sequenceowner: Any | None
    data_type: Any | None
    start_value: int | None
    min_value: int | None
    max_value: int | None
    increment_by: int | None
    cycle: bool | None
    cache_size: int | None
    last_value: int | None

@dataclasses.dataclass(slots=True)
class PgSettings:
    name: str | None
    setting: str | None
    unit: str | None
    category: str | None
    short_desc: str | None
    extra_desc: str | None
    context: str | None
    vartype: str | None
    source: str | None
    min_val: str | None
    max_val: str | None
    enumvals: list[Any] | None
    boot_val: str | None
    reset_val: str | None
    sourcefile: str | None
    sourceline: int | None
    pending_restart: bool | None

@dataclasses.dataclass(slots=True)
class PgShadow:
    usename: Any | None
    usesysid: Any | None
    usecreatedb: bool | None
    usesuper: bool | None
    userepl: bool | None
    usebypassrls: bool | None
    passwd: str | None
    valuntil: datetime.datetime | None
    useconfig: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgShdepend:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    dbid: Any
    classid: Any
    objid: Any
    objsubid: int
    refclassid: Any
    refobjid: Any
    deptype: str

@dataclasses.dataclass(slots=True)
class PgShdescription:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    objoid: Any
    classoid: Any
    description: str

@dataclasses.dataclass(slots=True)
class PgShmemAllocations:
    name: str | None
    off: int | None
    size: int | None
    allocated_size: int | None

@dataclasses.dataclass(slots=True)
class PgShseclabel:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    objoid: Any
    classoid: Any
    provider: str
    label: str

@dataclasses.dataclass(slots=True)
class PgStatActivity:
    datid: Any | None
    datname: Any | None
    pid: int | None
    leader_pid: int | None
    usesysid: Any | None
    usename: Any | None
    application_name: str | None
    client_addr: str | None
    client_hostname: str | None
    client_port: int | None
    backend_start: datetime.datetime | None
    xact_start: datetime.datetime | None
    query_start: datetime.datetime | None
    state_change: datetime.datetime | None
    wait_event_type: str | None
    wait_event: str | None
    state: str | None
    backend_xid: Any | None
    backend_xmin: Any | None
    query_id: int | None
    query: str | None
    backend_type: str | None

@dataclasses.dataclass(slots=True)
class PgStatAllIndexes:
    relid: Any | None
    indexrelid: Any | None
    schemaname: Any | None
    relname: Any | None
    indexrelname: Any | None
    idx_scan: int | None
    idx_tup_read: int | None
    idx_tup_fetch: int | None

@dataclasses.dataclass(slots=True)
class PgStatAllTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    seq_scan: int | None
    seq_tup_read: int | None
    idx_scan: int | None
    idx_tup_fetch: int | None
    n_tup_ins: int | None
    n_tup_upd: int | None
    n_tup_del: int | None
    n_tup_hot_upd: int | None
    n_live_tup: int | None
    n_dead_tup: int | None
    n_mod_since_analyze: int | None
    n_ins_since_vacuum: int | None
    last_vacuum: datetime.datetime | None
    last_autovacuum: datetime.datetime | None
    last_analyze: datetime.datetime | None
    last_autoanalyze: datetime.datetime | None
    vacuum_count: int | None
    autovacuum_count: int | None
    analyze_count: int | None
    autoanalyze_count: int | None

@dataclasses.dataclass(slots=True)
class PgStatArchiver:
    archived_count: int | None
    last_archived_wal: str | None
    last_archived_time: datetime.datetime | None
    failed_count: int | None
    last_failed_wal: str | None
    last_failed_time: datetime.datetime | None
    stats_reset: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatBgwriter:
    checkpoints_timed: int | None
    checkpoints_req: int | None
    checkpoint_write_time: float | None
    checkpoint_sync_time: float | None
    buffers_checkpoint: int | None
    buffers_clean: int | None
    maxwritten_clean: int | None
    buffers_backend: int | None
    buffers_backend_fsync: int | None
    buffers_alloc: int | None
    stats_reset: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatDatabase:
    datid: Any | None
    datname: Any | None
    numbackends: int | None
    xact_commit: int | None
    xact_rollback: int | None
    blks_read: int | None
    blks_hit: int | None
    tup_returned: int | None
    tup_fetched: int | None
    tup_inserted: int | None
    tup_updated: int | None
    tup_deleted: int | None
    conflicts: int | None
    temp_files: int | None
    temp_bytes: int | None
    deadlocks: int | None
    checksum_failures: int | None
    checksum_last_failure: datetime.datetime | None
    blk_read_time: float | None
    blk_write_time: float | None
    session_time: float | None
    active_time: float | None
    idle_in_transaction_time: float | None
    sessions: int | None
    sessions_abandoned: int | None
    sessions_fatal: int | None
    sessions_killed: int | None
    stats_reset: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatDatabaseConflicts:
    datid: Any | None
    datname: Any | None
    confl_tablespace: int | None
    confl_lock: int | None
    confl_snapshot: int | None
    confl_bufferpin: int | None
    confl_deadlock: int | None

@dataclasses.dataclass(slots=True)
class PgStatGssapi:
    pid: int | None
    gss_authenticated: bool | None
    principal: str | None
    encrypted: bool | None

@dataclasses.dataclass(slots=True)
class PgStatProgressAnalyze:
    pid: int | None
    datid: Any | None
    datname: Any | None
    relid: Any | None
    phase: str | None
    sample_blks_total: int | None
    sample_blks_scanned: int | None
    ext_stats_total: int | None
    ext_stats_computed: int | None
    child_tables_total: int | None
    child_tables_done: int | None
    current_child_table_relid: Any | None

@dataclasses.dataclass(slots=True)
class PgStatProgressBasebackup:
    pid: int | None
    phase: str | None
    backup_total: int | None
    backup_streamed: int | None
    tablespaces_total: int | None
    tablespaces_streamed: int | None

@dataclasses.dataclass(slots=True)
class PgStatProgressCluster:
    pid: int | None
    datid: Any | None
    datname: Any | None
    relid: Any | None
    command: str | None
    phase: str | None
    cluster_index_relid: Any | None
    heap_tuples_scanned: int | None
    heap_tuples_written: int | None
    heap_blks_total: int | None
    heap_blks_scanned: int | None
    index_rebuild_count: int | None

@dataclasses.dataclass(slots=True)
class PgStatProgressCopy:
    pid: int | None
    datid: Any | None
    datname: Any | None
    relid: Any | None
    command: str | None
    type: str | None
    bytes_processed: int | None
    bytes_total: int | None
    tuples_processed: int | None
    tuples_excluded: int | None

@dataclasses.dataclass(slots=True)
class PgStatProgressCreateIndex:
    pid: int | None
    datid: Any | None
    datname: Any | None
    relid: Any | None
    index_relid: Any | None
    command: str | None
    phase: str | None
    lockers_total: int | None
    lockers_done: int | None
    current_locker_pid: int | None
    blocks_total: int | None
    blocks_done: int | None
    tuples_total: int | None
    tuples_done: int | None
    partitions_total: int | None
    partitions_done: int | None

@dataclasses.dataclass(slots=True)
class PgStatProgressVacuum:
    pid: int | None
    datid: Any | None
    datname: Any | None
    relid: Any | None
    phase: str | None
    heap_blks_total: int | None
    heap_blks_scanned: int | None
    heap_blks_vacuumed: int | None
    index_vacuum_count: int | None
    max_dead_tuples: int | None
    num_dead_tuples: int | None

@dataclasses.dataclass(slots=True)
class PgStatRecoveryPrefetch:
    stats_reset: datetime.datetime | None
    prefetch: int | None
    hit: int | None
    skip_init: int | None
    skip_new: int | None
    skip_fpw: int | None
    skip_rep: int | None
    wal_distance: int | None
    block_distance: int | None
    io_depth: int | None

@dataclasses.dataclass(slots=True)
class PgStatReplication:
    pid: int | None
    usesysid: Any | None
    usename: Any | None
    application_name: str | None
    client_addr: str | None
    client_hostname: str | None
    client_port: int | None
    backend_start: datetime.datetime | None
    backend_xmin: Any | None
    state: str | None
    sent_lsn: Any | None
    write_lsn: Any | None
    flush_lsn: Any | None
    replay_lsn: Any | None
    write_lag: datetime.timedelta | None
    flush_lag: datetime.timedelta | None
    replay_lag: datetime.timedelta | None
    sync_priority: int | None
    sync_state: str | None
    reply_time: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatReplicationSlots:
    slot_name: str | None
    spill_txns: int | None
    spill_count: int | None
    spill_bytes: int | None
    stream_txns: int | None
    stream_count: int | None
    stream_bytes: int | None
    total_txns: int | None
    total_bytes: int | None
    stats_reset: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatSlru:
    name: str | None
    blks_zeroed: int | None
    blks_hit: int | None
    blks_read: int | None
    blks_written: int | None
    blks_exists: int | None
    flushes: int | None
    truncates: int | None
    stats_reset: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatSsl:
    pid: int | None
    ssl: bool | None
    version: str | None
    cipher: str | None
    bits: int | None
    client_dn: str | None
    client_serial: float | None
    issuer_dn: str | None

@dataclasses.dataclass(slots=True)
class PgStatSubscription:
    subid: Any | None
    subname: Any | None
    pid: int | None
    relid: Any | None
    received_lsn: Any | None
    last_msg_send_time: datetime.datetime | None
    last_msg_receipt_time: datetime.datetime | None
    latest_end_lsn: Any | None
    latest_end_time: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatSubscriptionStats:
    subid: Any | None
    subname: Any | None
    apply_error_count: int | None
    sync_error_count: int | None
    stats_reset: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatSysIndexes:
    relid: Any | None
    indexrelid: Any | None
    schemaname: Any | None
    relname: Any | None
    indexrelname: Any | None
    idx_scan: int | None
    idx_tup_read: int | None
    idx_tup_fetch: int | None

@dataclasses.dataclass(slots=True)
class PgStatSysTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    seq_scan: int | None
    seq_tup_read: int | None
    idx_scan: int | None
    idx_tup_fetch: int | None
    n_tup_ins: int | None
    n_tup_upd: int | None
    n_tup_del: int | None
    n_tup_hot_upd: int | None
    n_live_tup: int | None
    n_dead_tup: int | None
    n_mod_since_analyze: int | None
    n_ins_since_vacuum: int | None
    last_vacuum: datetime.datetime | None
    last_autovacuum: datetime.datetime | None
    last_analyze: datetime.datetime | None
    last_autoanalyze: datetime.datetime | None
    vacuum_count: int | None
    autovacuum_count: int | None
    analyze_count: int | None
    autoanalyze_count: int | None

@dataclasses.dataclass(slots=True)
class PgStatUserFunctions:
    funcid: Any | None
    schemaname: Any | None
    funcname: Any | None
    calls: int | None
    total_time: float | None
    self_time: float | None

@dataclasses.dataclass(slots=True)
class PgStatUserIndexes:
    relid: Any | None
    indexrelid: Any | None
    schemaname: Any | None
    relname: Any | None
    indexrelname: Any | None
    idx_scan: int | None
    idx_tup_read: int | None
    idx_tup_fetch: int | None

@dataclasses.dataclass(slots=True)
class PgStatUserTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    seq_scan: int | None
    seq_tup_read: int | None
    idx_scan: int | None
    idx_tup_fetch: int | None
    n_tup_ins: int | None
    n_tup_upd: int | None
    n_tup_del: int | None
    n_tup_hot_upd: int | None
    n_live_tup: int | None
    n_dead_tup: int | None
    n_mod_since_analyze: int | None
    n_ins_since_vacuum: int | None
    last_vacuum: datetime.datetime | None
    last_autovacuum: datetime.datetime | None
    last_analyze: datetime.datetime | None
    last_autoanalyze: datetime.datetime | None
    vacuum_count: int | None
    autovacuum_count: int | None
    analyze_count: int | None
    autoanalyze_count: int | None

@dataclasses.dataclass(slots=True)
class PgStatWal:
    wal_records: int | None
    wal_fpi: int | None
    wal_bytes: float | None
    wal_buffers_full: int | None
    wal_write: int | None
    wal_sync: int | None
    wal_write_time: float | None
    wal_sync_time: float | None
    stats_reset: datetime.datetime | None

@dataclasses.dataclass(slots=True)
class PgStatWalReceiver:
    pid: int | None
    status: str | None
    receive_start_lsn: Any | None
    receive_start_tli: int | None
    written_lsn: Any | None
    flushed_lsn: Any | None
    received_tli: int | None
    last_msg_send_time: datetime.datetime | None
    last_msg_receipt_time: datetime.datetime | None
    latest_end_lsn: Any | None
    latest_end_time: datetime.datetime | None
    slot_name: str | None
    sender_host: str | None
    sender_port: int | None
    conninfo: str | None

@dataclasses.dataclass(slots=True)
class PgStatXactAllTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    seq_scan: int | None
    seq_tup_read: int | None
    idx_scan: int | None
    idx_tup_fetch: int | None
    n_tup_ins: int | None
    n_tup_upd: int | None
    n_tup_del: int | None
    n_tup_hot_upd: int | None

@dataclasses.dataclass(slots=True)
class PgStatXactSysTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    seq_scan: int | None
    seq_tup_read: int | None
    idx_scan: int | None
    idx_tup_fetch: int | None
    n_tup_ins: int | None
    n_tup_upd: int | None
    n_tup_del: int | None
    n_tup_hot_upd: int | None

@dataclasses.dataclass(slots=True)
class PgStatXactUserFunctions:
    funcid: Any | None
    schemaname: Any | None
    funcname: Any | None
    calls: int | None
    total_time: float | None
    self_time: float | None

@dataclasses.dataclass(slots=True)
class PgStatXactUserTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    seq_scan: int | None
    seq_tup_read: int | None
    idx_scan: int | None
    idx_tup_fetch: int | None
    n_tup_ins: int | None
    n_tup_upd: int | None
    n_tup_del: int | None
    n_tup_hot_upd: int | None

@dataclasses.dataclass(slots=True)
class PgStatioAllIndexes:
    relid: Any | None
    indexrelid: Any | None
    schemaname: Any | None
    relname: Any | None
    indexrelname: Any | None
    idx_blks_read: int | None
    idx_blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioAllSequences:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    blks_read: int | None
    blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioAllTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    heap_blks_read: int | None
    heap_blks_hit: int | None
    idx_blks_read: int | None
    idx_blks_hit: int | None
    toast_blks_read: int | None
    toast_blks_hit: int | None
    tidx_blks_read: int | None
    tidx_blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioSysIndexes:
    relid: Any | None
    indexrelid: Any | None
    schemaname: Any | None
    relname: Any | None
    indexrelname: Any | None
    idx_blks_read: int | None
    idx_blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioSysSequences:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    blks_read: int | None
    blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioSysTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    heap_blks_read: int | None
    heap_blks_hit: int | None
    idx_blks_read: int | None
    idx_blks_hit: int | None
    toast_blks_read: int | None
    toast_blks_hit: int | None
    tidx_blks_read: int | None
    tidx_blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioUserIndexes:
    relid: Any | None
    indexrelid: Any | None
    schemaname: Any | None
    relname: Any | None
    indexrelname: Any | None
    idx_blks_read: int | None
    idx_blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioUserSequences:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    blks_read: int | None
    blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatioUserTables:
    relid: Any | None
    schemaname: Any | None
    relname: Any | None
    heap_blks_read: int | None
    heap_blks_hit: int | None
    idx_blks_read: int | None
    idx_blks_hit: int | None
    toast_blks_read: int | None
    toast_blks_hit: int | None
    tidx_blks_read: int | None
    tidx_blks_hit: int | None

@dataclasses.dataclass(slots=True)
class PgStatistic:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    starelid: Any
    staattnum: int
    stainherit: bool
    stanullfrac: float
    stawidth: int
    stadistinct: float
    stakind1: int
    stakind2: int
    stakind3: int
    stakind4: int
    stakind5: int
    staop1: Any
    staop2: Any
    staop3: Any
    staop4: Any
    staop5: Any
    stacoll1: Any
    stacoll2: Any
    stacoll3: Any
    stacoll4: Any
    stacoll5: Any
    stanumbers1: list[Any] | None
    stanumbers2: list[Any] | None
    stanumbers3: list[Any] | None
    stanumbers4: list[Any] | None
    stanumbers5: list[Any] | None
    stavalues1: Any | None
    stavalues2: Any | None
    stavalues3: Any | None
    stavalues4: Any | None
    stavalues5: Any | None

@dataclasses.dataclass(slots=True)
class PgStatisticExt:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    stxrelid: Any
    stxname: Any
    stxnamespace: Any
    stxowner: Any
    stxstattarget: int
    stxkeys: list[Any]
    stxkind: list[Any]
    stxexprs: Any | None

@dataclasses.dataclass(slots=True)
class PgStatisticExtData:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    stxoid: Any
    stxdinherit: bool
    stxdndistinct: Any | None
    stxddependencies: Any | None
    stxdmcv: Any | None
    stxdexpr: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgStats:
    schemaname: Any | None
    tablename: Any | None
    attname: Any | None
    inherited: bool | None
    null_frac: float | None
    avg_width: int | None
    n_distinct: float | None
    most_common_vals: Any | None
    most_common_freqs: list[Any] | None
    histogram_bounds: Any | None
    correlation: float | None
    most_common_elems: Any | None
    most_common_elem_freqs: list[Any] | None
    elem_count_histogram: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgStatsExt:
    schemaname: Any | None
    tablename: Any | None
    statistics_schemaname: Any | None
    statistics_name: Any | None
    statistics_owner: Any | None
    attnames: list[Any] | None
    exprs: list[Any] | None
    kinds: list[Any] | None
    inherited: bool | None
    n_distinct: Any | None
    dependencies: Any | None
    most_common_vals: list[Any] | None
    most_common_val_nulls: list[Any] | None
    most_common_freqs: list[Any] | None
    most_common_base_freqs: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgStatsExtExprs:
    schemaname: Any | None
    tablename: Any | None
    statistics_schemaname: Any | None
    statistics_name: Any | None
    statistics_owner: Any | None
    expr: str | None
    inherited: bool | None
    null_frac: float | None
    avg_width: int | None
    n_distinct: float | None
    most_common_vals: Any | None
    most_common_freqs: list[Any] | None
    histogram_bounds: Any | None
    correlation: float | None
    most_common_elems: Any | None
    most_common_elem_freqs: list[Any] | None
    elem_count_histogram: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgSubscription:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    subdbid: Any
    subskiplsn: Any
    subname: Any
    subowner: Any
    subenabled: bool
    subbinary: bool
    substream: bool
    subtwophasestate: str
    subdisableonerr: bool
    subconninfo: str
    subslotname: Any | None
    subsynccommit: str
    subpublications: list[Any]

@dataclasses.dataclass(slots=True)
class PgSubscriptionRel:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    srsubid: Any
    srrelid: Any
    srsubstate: str
    srsublsn: Any | None

@dataclasses.dataclass(slots=True)
class PgTables:
    schemaname: Any | None
    tablename: Any | None
    tableowner: Any | None
    tablespace: Any | None
    hasindexes: bool | None
    hasrules: bool | None
    hastriggers: bool | None
    rowsecurity: bool | None

@dataclasses.dataclass(slots=True)
class PgTablespace:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    spcname: Any
    spcowner: Any
    spcacl: list[Any] | None
    spcoptions: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgTimezoneAbbrevs:
    abbrev: str | None
    utc_offset: datetime.timedelta | None
    is_dst: bool | None

@dataclasses.dataclass(slots=True)
class PgTimezoneNames:
    name: str | None
    abbrev: str | None
    utc_offset: datetime.timedelta | None
    is_dst: bool | None

@dataclasses.dataclass(slots=True)
class PgTransform:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    trftype: Any
    trflang: Any
    trffromsql: Any
    trftosql: Any

@dataclasses.dataclass(slots=True)
class PgTrigger:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    tgrelid: Any
    tgparentid: Any
    tgname: Any
    tgfoid: Any
    tgtype: int
    tgenabled: str
    tgisinternal: bool
    tgconstrrelid: Any
    tgconstrindid: Any
    tgconstraint: Any
    tgdeferrable: bool
    tginitdeferred: bool
    tgnargs: int
    tgattr: list[Any]
    tgargs: bytes
    tgqual: Any | None
    tgoldtable: Any | None
    tgnewtable: Any | None

@dataclasses.dataclass(slots=True)
class PgTsConfig:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    cfgname: Any
    cfgnamespace: Any
    cfgowner: Any
    cfgparser: Any

@dataclasses.dataclass(slots=True)
class PgTsConfigMap:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    mapcfg: Any
    maptokentype: int
    mapseqno: int
    mapdict: Any

@dataclasses.dataclass(slots=True)
class PgTsDict:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    dictname: Any
    dictnamespace: Any
    dictowner: Any
    dicttemplate: Any
    dictinitoption: str | None

@dataclasses.dataclass(slots=True)
class PgTsParser:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    prsname: Any
    prsnamespace: Any
    prsstart: Any
    prstoken: Any
    prsend: Any
    prsheadline: Any
    prslextype: Any

@dataclasses.dataclass(slots=True)
class PgTsTemplate:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    tmplname: Any
    tmplnamespace: Any
    tmplinit: Any
    tmpllexize: Any

@dataclasses.dataclass(slots=True)
class PgType:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    typname: Any
    typnamespace: Any
    typowner: Any
    typlen: int
    typbyval: bool
    typtype: str
    typcategory: str
    typispreferred: bool
    typisdefined: bool
    typdelim: str
    typrelid: Any
    typsubscript: Any
    typelem: Any
    typarray: Any
    typinput: Any
    typoutput: Any
    typreceive: Any
    typsend: Any
    typmodin: Any
    typmodout: Any
    typanalyze: Any
    typalign: str
    typstorage: str
    typnotnull: bool
    typbasetype: Any
    typtypmod: int
    typndims: int
    typcollation: Any
    typdefaultbin: Any | None
    typdefault: str | None
    typacl: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgUser:
    usename: Any | None
    usesysid: Any | None
    usecreatedb: bool | None
    usesuper: bool | None
    userepl: bool | None
    usebypassrls: bool | None
    passwd: str | None
    valuntil: datetime.datetime | None
    useconfig: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgUserMapping:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    oid: Any
    umuser: Any
    umserver: Any
    umoptions: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgUserMappings:
    umid: Any | None
    srvid: Any | None
    srvname: Any | None
    umuser: Any | None
    usename: Any | None
    umoptions: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgViews:
    schemaname: Any | None
    viewname: Any | None
    viewowner: Any | None
    definition: str | None

@dataclasses.dataclass(slots=True)
class PgForeignDataWrappers:
    oid: Any | None
    fdwowner: Any | None
    fdwoptions: list[Any] | None
    foreign_data_wrapper_catalog: Any | None
    foreign_data_wrapper_name: Any | None
    authorization_identifier: Any | None
    foreign_data_wrapper_language: Any | None

@dataclasses.dataclass(slots=True)
class PgForeignServers:
    oid: Any | None
    srvoptions: list[Any] | None
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None
    foreign_data_wrapper_catalog: Any | None
    foreign_data_wrapper_name: Any | None
    foreign_server_type: Any | None
    foreign_server_version: Any | None
    authorization_identifier: Any | None

@dataclasses.dataclass(slots=True)
class PgForeignTableColumns:
    nspname: Any | None
    relname: Any | None
    attname: Any | None
    attfdwoptions: list[Any] | None

@dataclasses.dataclass(slots=True)
class PgForeignTables:
    foreign_table_catalog: Any | None
    foreign_table_schema: Any | None
    foreign_table_name: Any | None
    ftoptions: list[Any] | None
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None
    authorization_identifier: Any | None

@dataclasses.dataclass(slots=True)
class PgUserMappings:
    oid: Any | None
    umoptions: list[Any] | None
    umuser: Any | None
    authorization_identifier: Any | None
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None
    srvowner: Any | None

@dataclasses.dataclass(slots=True)
class AdministrableRoleAuthorizations:
    grantee: Any | None
    role_name: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class ApplicableRoles:
    grantee: Any | None
    role_name: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class Attributes:
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    attribute_name: Any | None
    ordinal_position: Any | None
    attribute_default: Any | None
    is_nullable: Any | None
    data_type: Any | None
    character_maximum_length: Any | None
    character_octet_length: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    datetime_precision: Any | None
    interval_type: Any | None
    interval_precision: Any | None
    attribute_udt_catalog: Any | None
    attribute_udt_schema: Any | None
    attribute_udt_name: Any | None
    scope_catalog: Any | None
    scope_schema: Any | None
    scope_name: Any | None
    maximum_cardinality: Any | None
    dtd_identifier: Any | None
    is_derived_reference_attribute: Any | None

@dataclasses.dataclass(slots=True)
class CharacterSets:
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    character_repertoire: Any | None
    form_of_use: Any | None
    default_collate_catalog: Any | None
    default_collate_schema: Any | None
    default_collate_name: Any | None

@dataclasses.dataclass(slots=True)
class CheckConstraintRoutineUsage:
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None

@dataclasses.dataclass(slots=True)
class CheckConstraints:
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None
    check_clause: Any | None

@dataclasses.dataclass(slots=True)
class CollationCharacterSetApplicability:
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None

@dataclasses.dataclass(slots=True)
class Collations:
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    pad_attribute: Any | None

@dataclasses.dataclass(slots=True)
class ColumnColumnUsage:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None
    dependent_column: Any | None

@dataclasses.dataclass(slots=True)
class ColumnDomainUsage:
    domain_catalog: Any | None
    domain_schema: Any | None
    domain_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None

@dataclasses.dataclass(slots=True)
class ColumnOptions:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None
    option_name: Any | None
    option_value: Any | None

@dataclasses.dataclass(slots=True)
class ColumnPrivileges:
    grantor: Any | None
    grantee: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class ColumnUdtUsage:
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None

@dataclasses.dataclass(slots=True)
class Columns:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None
    ordinal_position: Any | None
    column_default: Any | None
    is_nullable: Any | None
    data_type: Any | None
    character_maximum_length: Any | None
    character_octet_length: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    datetime_precision: Any | None
    interval_type: Any | None
    interval_precision: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    domain_catalog: Any | None
    domain_schema: Any | None
    domain_name: Any | None
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    scope_catalog: Any | None
    scope_schema: Any | None
    scope_name: Any | None
    maximum_cardinality: Any | None
    dtd_identifier: Any | None
    is_self_referencing: Any | None
    is_identity: Any | None
    identity_generation: Any | None
    identity_start: Any | None
    identity_increment: Any | None
    identity_maximum: Any | None
    identity_minimum: Any | None
    identity_cycle: Any | None
    is_generated: Any | None
    generation_expression: Any | None
    is_updatable: Any | None

@dataclasses.dataclass(slots=True)
class ConstraintColumnUsage:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None

@dataclasses.dataclass(slots=True)
class ConstraintTableUsage:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None

@dataclasses.dataclass(slots=True)
class DataTypePrivileges:
    object_catalog: Any | None
    object_schema: Any | None
    object_name: Any | None
    object_type: Any | None
    dtd_identifier: Any | None

@dataclasses.dataclass(slots=True)
class DomainConstraints:
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None
    domain_catalog: Any | None
    domain_schema: Any | None
    domain_name: Any | None
    is_deferrable: Any | None
    initially_deferred: Any | None

@dataclasses.dataclass(slots=True)
class DomainUdtUsage:
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    domain_catalog: Any | None
    domain_schema: Any | None
    domain_name: Any | None

@dataclasses.dataclass(slots=True)
class Domains:
    domain_catalog: Any | None
    domain_schema: Any | None
    domain_name: Any | None
    data_type: Any | None
    character_maximum_length: Any | None
    character_octet_length: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    datetime_precision: Any | None
    interval_type: Any | None
    interval_precision: Any | None
    domain_default: Any | None
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    scope_catalog: Any | None
    scope_schema: Any | None
    scope_name: Any | None
    maximum_cardinality: Any | None
    dtd_identifier: Any | None

@dataclasses.dataclass(slots=True)
class ElementTypes:
    object_catalog: Any | None
    object_schema: Any | None
    object_name: Any | None
    object_type: Any | None
    collection_type_identifier: Any | None
    data_type: Any | None
    character_maximum_length: Any | None
    character_octet_length: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    datetime_precision: Any | None
    interval_type: Any | None
    interval_precision: Any | None
    domain_default: Any | None
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    scope_catalog: Any | None
    scope_schema: Any | None
    scope_name: Any | None
    maximum_cardinality: Any | None
    dtd_identifier: Any | None

@dataclasses.dataclass(slots=True)
class EnabledRoles:
    role_name: Any | None

@dataclasses.dataclass(slots=True)
class ForeignDataWrapperOptions:
    foreign_data_wrapper_catalog: Any | None
    foreign_data_wrapper_name: Any | None
    option_name: Any | None
    option_value: Any | None

@dataclasses.dataclass(slots=True)
class ForeignDataWrappers:
    foreign_data_wrapper_catalog: Any | None
    foreign_data_wrapper_name: Any | None
    authorization_identifier: Any | None
    library_name: Any | None
    foreign_data_wrapper_language: Any | None

@dataclasses.dataclass(slots=True)
class ForeignServerOptions:
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None
    option_name: Any | None
    option_value: Any | None

@dataclasses.dataclass(slots=True)
class ForeignServers:
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None
    foreign_data_wrapper_catalog: Any | None
    foreign_data_wrapper_name: Any | None
    foreign_server_type: Any | None
    foreign_server_version: Any | None
    authorization_identifier: Any | None

@dataclasses.dataclass(slots=True)
class ForeignTableOptions:
    foreign_table_catalog: Any | None
    foreign_table_schema: Any | None
    foreign_table_name: Any | None
    option_name: Any | None
    option_value: Any | None

@dataclasses.dataclass(slots=True)
class ForeignTables:
    foreign_table_catalog: Any | None
    foreign_table_schema: Any | None
    foreign_table_name: Any | None
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None

@dataclasses.dataclass(slots=True)
class InformationSchemaCatalogName:
    catalog_name: Any | None

@dataclasses.dataclass(slots=True)
class KeyColumnUsage:
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None
    ordinal_position: Any | None
    position_in_unique_constraint: Any | None

@dataclasses.dataclass(slots=True)
class Parameters:
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    ordinal_position: Any | None
    parameter_mode: Any | None
    is_result: Any | None
    as_locator: Any | None
    parameter_name: Any | None
    data_type: Any | None
    character_maximum_length: Any | None
    character_octet_length: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    datetime_precision: Any | None
    interval_type: Any | None
    interval_precision: Any | None
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    scope_catalog: Any | None
    scope_schema: Any | None
    scope_name: Any | None
    maximum_cardinality: Any | None
    dtd_identifier: Any | None
    parameter_default: Any | None

@dataclasses.dataclass(slots=True)
class ReferentialConstraints:
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None
    unique_constraint_catalog: Any | None
    unique_constraint_schema: Any | None
    unique_constraint_name: Any | None
    match_option: Any | None
    update_rule: Any | None
    delete_rule: Any | None

@dataclasses.dataclass(slots=True)
class RoleColumnGrants:
    grantor: Any | None
    grantee: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class RoleRoutineGrants:
    grantor: Any | None
    grantee: Any | None
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    routine_catalog: Any | None
    routine_schema: Any | None
    routine_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class RoleTableGrants:
    grantor: Any | None
    grantee: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None
    with_hierarchy: Any | None

@dataclasses.dataclass(slots=True)
class RoleUdtGrants:
    grantor: Any | None
    grantee: Any | None
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class RoleUsageGrants:
    grantor: Any | None
    grantee: Any | None
    object_catalog: Any | None
    object_schema: Any | None
    object_name: Any | None
    object_type: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class RoutineColumnUsage:
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    routine_catalog: Any | None
    routine_schema: Any | None
    routine_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None

@dataclasses.dataclass(slots=True)
class RoutinePrivileges:
    grantor: Any | None
    grantee: Any | None
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    routine_catalog: Any | None
    routine_schema: Any | None
    routine_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class RoutineRoutineUsage:
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    routine_catalog: Any | None
    routine_schema: Any | None
    routine_name: Any | None

@dataclasses.dataclass(slots=True)
class RoutineSequenceUsage:
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    routine_catalog: Any | None
    routine_schema: Any | None
    routine_name: Any | None
    sequence_catalog: Any | None
    sequence_schema: Any | None
    sequence_name: Any | None

@dataclasses.dataclass(slots=True)
class RoutineTableUsage:
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    routine_catalog: Any | None
    routine_schema: Any | None
    routine_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None

@dataclasses.dataclass(slots=True)
class Routines:
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    routine_catalog: Any | None
    routine_schema: Any | None
    routine_name: Any | None
    routine_type: Any | None
    module_catalog: Any | None
    module_schema: Any | None
    module_name: Any | None
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    data_type: Any | None
    character_maximum_length: Any | None
    character_octet_length: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    datetime_precision: Any | None
    interval_type: Any | None
    interval_precision: Any | None
    type_udt_catalog: Any | None
    type_udt_schema: Any | None
    type_udt_name: Any | None
    scope_catalog: Any | None
    scope_schema: Any | None
    scope_name: Any | None
    maximum_cardinality: Any | None
    dtd_identifier: Any | None
    routine_body: Any | None
    routine_definition: Any | None
    external_name: Any | None
    external_language: Any | None
    parameter_style: Any | None
    is_deterministic: Any | None
    sql_data_access: Any | None
    is_null_call: Any | None
    sql_path: Any | None
    schema_level_routine: Any | None
    max_dynamic_result_sets: Any | None
    is_user_defined_cast: Any | None
    is_implicitly_invocable: Any | None
    security_type: Any | None
    to_sql_specific_catalog: Any | None
    to_sql_specific_schema: Any | None
    to_sql_specific_name: Any | None
    as_locator: Any | None
    created: Any | None
    last_altered: Any | None
    new_savepoint_level: Any | None
    is_udt_dependent: Any | None
    result_cast_from_data_type: Any | None
    result_cast_as_locator: Any | None
    result_cast_char_max_length: Any | None
    result_cast_char_octet_length: Any | None
    result_cast_char_set_catalog: Any | None
    result_cast_char_set_schema: Any | None
    result_cast_char_set_name: Any | None
    result_cast_collation_catalog: Any | None
    result_cast_collation_schema: Any | None
    result_cast_collation_name: Any | None
    result_cast_numeric_precision: Any | None
    result_cast_numeric_precision_radix: Any | None
    result_cast_numeric_scale: Any | None
    result_cast_datetime_precision: Any | None
    result_cast_interval_type: Any | None
    result_cast_interval_precision: Any | None
    result_cast_type_udt_catalog: Any | None
    result_cast_type_udt_schema: Any | None
    result_cast_type_udt_name: Any | None
    result_cast_scope_catalog: Any | None
    result_cast_scope_schema: Any | None
    result_cast_scope_name: Any | None
    result_cast_maximum_cardinality: Any | None
    result_cast_dtd_identifier: Any | None

@dataclasses.dataclass(slots=True)
class Schemata:
    catalog_name: Any | None
    schema_name: Any | None
    schema_owner: Any | None
    default_character_set_catalog: Any | None
    default_character_set_schema: Any | None
    default_character_set_name: Any | None
    sql_path: Any | None

@dataclasses.dataclass(slots=True)
class Sequences:
    sequence_catalog: Any | None
    sequence_schema: Any | None
    sequence_name: Any | None
    data_type: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    start_value: Any | None
    minimum_value: Any | None
    maximum_value: Any | None
    increment: Any | None
    cycle_option: Any | None

@dataclasses.dataclass(slots=True)
class SqlFeatures:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    feature_id: Any | None
    feature_name: Any | None
    sub_feature_id: Any | None
    sub_feature_name: Any | None
    is_supported: Any | None
    is_verified_by: Any | None
    comments: Any | None

@dataclasses.dataclass(slots=True)
class SqlImplementationInfo:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    implementation_info_id: Any | None
    implementation_info_name: Any | None
    integer_value: Any | None
    character_value: Any | None
    comments: Any | None

@dataclasses.dataclass(slots=True)
class SqlParts:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    feature_id: Any | None
    feature_name: Any | None
    is_supported: Any | None
    is_verified_by: Any | None
    comments: Any | None

@dataclasses.dataclass(slots=True)
class SqlSizing:
    tableoid: Any
    cmax: Any
    xmax: Any
    cmin: Any
    xmin: Any
    ctid: Any
    sizing_id: Any | None
    sizing_name: Any | None
    supported_value: Any | None
    comments: Any | None

@dataclasses.dataclass(slots=True)
class TableConstraints:
    constraint_catalog: Any | None
    constraint_schema: Any | None
    constraint_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    constraint_type: Any | None
    is_deferrable: Any | None
    initially_deferred: Any | None
    enforced: Any | None
    nulls_distinct: Any | None

@dataclasses.dataclass(slots=True)
class TablePrivileges:
    grantor: Any | None
    grantee: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None
    with_hierarchy: Any | None

@dataclasses.dataclass(slots=True)
class Tables:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    table_type: Any | None
    self_referencing_column_name: Any | None
    reference_generation: Any | None
    user_defined_type_catalog: Any | None
    user_defined_type_schema: Any | None
    user_defined_type_name: Any | None
    is_insertable_into: Any | None
    is_typed: Any | None
    commit_action: Any | None

@dataclasses.dataclass(slots=True)
class Transforms:
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None
    group_name: Any | None
    transform_type: Any | None

@dataclasses.dataclass(slots=True)
class TriggeredUpdateColumns:
    trigger_catalog: Any | None
    trigger_schema: Any | None
    trigger_name: Any | None
    event_object_catalog: Any | None
    event_object_schema: Any | None
    event_object_table: Any | None
    event_object_column: Any | None

@dataclasses.dataclass(slots=True)
class Triggers:
    trigger_catalog: Any | None
    trigger_schema: Any | None
    trigger_name: Any | None
    event_manipulation: Any | None
    event_object_catalog: Any | None
    event_object_schema: Any | None
    event_object_table: Any | None
    action_order: Any | None
    action_condition: Any | None
    action_statement: Any | None
    action_orientation: Any | None
    action_timing: Any | None
    action_reference_old_table: Any | None
    action_reference_new_table: Any | None
    action_reference_old_row: Any | None
    action_reference_new_row: Any | None
    created: Any | None

@dataclasses.dataclass(slots=True)
class UdtPrivileges:
    grantor: Any | None
    grantee: Any | None
    udt_catalog: Any | None
    udt_schema: Any | None
    udt_name: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class UsagePrivileges:
    grantor: Any | None
    grantee: Any | None
    object_catalog: Any | None
    object_schema: Any | None
    object_name: Any | None
    object_type: Any | None
    privilege_type: Any | None
    is_grantable: Any | None

@dataclasses.dataclass(slots=True)
class UserDefinedTypes:
    user_defined_type_catalog: Any | None
    user_defined_type_schema: Any | None
    user_defined_type_name: Any | None
    user_defined_type_category: Any | None
    is_instantiable: Any | None
    is_final: Any | None
    ordering_form: Any | None
    ordering_category: Any | None
    ordering_routine_catalog: Any | None
    ordering_routine_schema: Any | None
    ordering_routine_name: Any | None
    reference_type: Any | None
    data_type: Any | None
    character_maximum_length: Any | None
    character_octet_length: Any | None
    character_set_catalog: Any | None
    character_set_schema: Any | None
    character_set_name: Any | None
    collation_catalog: Any | None
    collation_schema: Any | None
    collation_name: Any | None
    numeric_precision: Any | None
    numeric_precision_radix: Any | None
    numeric_scale: Any | None
    datetime_precision: Any | None
    interval_type: Any | None
    interval_precision: Any | None
    source_dtd_identifier: Any | None
    ref_dtd_identifier: Any | None

@dataclasses.dataclass(slots=True)
class UserMappingOptions:
    authorization_identifier: Any | None
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None
    option_name: Any | None
    option_value: Any | None

@dataclasses.dataclass(slots=True)
class UserMappings:
    authorization_identifier: Any | None
    foreign_server_catalog: Any | None
    foreign_server_name: Any | None

@dataclasses.dataclass(slots=True)
class ViewColumnUsage:
    view_catalog: Any | None
    view_schema: Any | None
    view_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    column_name: Any | None

@dataclasses.dataclass(slots=True)
class ViewRoutineUsage:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    specific_catalog: Any | None
    specific_schema: Any | None
    specific_name: Any | None

@dataclasses.dataclass(slots=True)
class ViewTableUsage:
    view_catalog: Any | None
    view_schema: Any | None
    view_name: Any | None
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None

@dataclasses.dataclass(slots=True)
class Views:
    table_catalog: Any | None
    table_schema: Any | None
    table_name: Any | None
    view_definition: Any | None
    check_option: Any | None
    is_updatable: Any | None
    is_insertable_into: Any | None
    is_trigger_updatable: Any | None
    is_trigger_deletable: Any | None
    is_trigger_insertable_into: Any | None

